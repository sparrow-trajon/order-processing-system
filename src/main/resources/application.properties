# Server Configuration
server.port=8080

# Application Name
spring.application.name=OrderManagement

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:ordermanagement
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Logging
logging.level.com.ordermanagement=DEBUG
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

# Health Check Configuration
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Health Groups for Kubernetes Probes
management.endpoint.health.group.liveness.include=livenessState,ping
management.endpoint.health.group.readiness.include=readinessState,db,applicationReadiness,orderRepositoryHealth

# Health Indicator Configuration
management.health.db.enabled=true
management.health.diskSpace.enabled=true

# Application Info (for Actuator)
info.app.name=Order Management System
info.app.description=E-commerce Order Processing System
info.app.version=1.0.0
info.app.java.version=21

# Business Rules Configuration
business.order.max-items=100
business.order.max-quantity-per-item=10000
business.order.max-unit-price=1000000
business.order.scheduler-interval-ms=300000

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:4200,http://localhost:8081
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
cors.allowed-headers=*
cors.allow-credentials=true
cors.max-age=3600

# Retry Configuration
spring.retry.max-attempts=3
spring.retry.backoff.delay=1000
spring.retry.backoff.max-delay=5000
spring.retry.backoff.multiplier=2

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.slowCallRateThreshold=50
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=5s

# Distributed Tracing Configuration
management.tracing.sampling.probability=1.0
management.tracing.enabled=true
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
spring.application.name=order-management-service

# Logging Configuration
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.file.name=logs/order-management-application.log
logging.file.path=logs
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB
